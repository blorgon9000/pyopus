This is an example of how to peform 50 differential evolution runs of 
every test function in the global optimization test suite for population 
sizes from 10 to 1000. Every run performs 75000 function evaluations. 

This takes very very very long on one computer, but becomes manageable 
with a cluster of 20 CPUs. 

Every run is a batch job. Batch jobs are scheduled asynchronously to CPUs 
in the cluster. The results are stored in files (around 50G). The fhist* 
files contain the pickled function evaluation history for one run. 

The an.py example shows how to load the results and analyze them. 

The actual job (callable object) must be defined in a separate module so 
that it can be pickled and sent to remote tasks. 

To run the example, edit the hosts.pvm file (change the username, homedir, 
the path to the python interptreter, and the list of machines in the
cluster). Then start the pvm system with 

  pvm hosts.pvm

next run the example

  python depop.py

and finally edit the an.py file and run it

  python an.py

To shut down the pvm system run 

  pvm 

and type

  halt
